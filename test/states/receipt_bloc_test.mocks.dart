// Mocks generated by Mockito 5.3.2 from annotations
// in chat_app/test/states/receipt_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chat/chat.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'receipt_bloc_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ReceiptService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReceiptService extends _i1.Mock implements _i2.ReceiptService {
  MockReceiptService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> send(_i4.Receipt? receipt) => (super.noSuchMethod(
        Invocation.method(
          #send,
          [receipt],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Stream<_i4.Receipt> receipts(_i4.User? user) => (super.noSuchMethod(
        Invocation.method(
          #receipts,
          [user],
        ),
        returnValue: _i3.Stream<_i4.Receipt>.empty(),
      ) as _i3.Stream<_i4.Receipt>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
